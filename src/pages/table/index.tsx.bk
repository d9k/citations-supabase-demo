import { usePageFrameLayoutComponent } from '/~/shared/providers/layout/page-frame/index.tsx';
import { Spinner } from '/~/shared/ui/spinner.tsx';
import useUrlParamName from '/~/shared/lib/react/routing/useUrlParamName.ts';
// import { SupabaseAutogeneratedDataGrid } from '/~/widgets/supabase/autogenerated-data-grid/index.tsx';
import { Suspense } from 'react';

// import { publicSchema } from '/~/shared/api/supabase/schemas.ts';
import { useQueryKeyUniqueSuffix } from '/~/shared/lib/react/query/key.ts';
import { useRenderOnlyInBrowser } from '/~/shared/lib/react/useRenderOnlyInBrowser.ts';

import {
  COLUMNS_SHOW_FIRST,
  COLUMNS_SHOW_LAST,
} from '/~/shared/api/supabase/const.ts';

//@deno-types="@types/lodash"
import { startCase } from 'lodash';

const TablePage = () => {
  const isBrowser = useRenderOnlyInBrowser();

  const [qkey, qkeyRegen] = useQueryKeyUniqueSuffix();
  const PageFrameComponent = usePageFrameLayoutComponent();
  // const [loading, setLoading] = useState(false);
  // const user = useSupabase();
  const name = useUrlParamName();

  if (!name) {
    return <>Error: can't parse url param "name"</>;
  }

  // const tableSchema = publicSchema[name];
  // console.debug('__TEST__: TablePage: table schema:', tableSchema);

  // if (!tableSchema) {
  //   return <>Error: no schema with dis table</>;
  // }

  return (
    <PageFrameComponent>
      <h3>{startCase(name)} table</h3>

      {isBrowser
        ? (
          <Suspense fallback={<Spinner />}>
            __TEST__
            {
              /* <SupabaseAutogeneratedDataGrid
              columnsNamesFirst={COLUMNS_SHOW_FIRST}
              columnsNamesLast={COLUMNS_SHOW_LAST}
              onReloadRequired={qkeyRegen}
              queryKeyUniqueSuffix={qkey}
              tableName={name}
              tableSchema={tableSchema}
            /> */
            }
          </Suspense>
        )
        : <Spinner />}
    </PageFrameComponent>
  );
};

export default TablePage;
