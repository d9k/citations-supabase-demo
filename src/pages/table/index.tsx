import { Suspense } from 'react';
import { Link } from 'react-router-dom';
import { useSupabaseUser } from '/~/shared/providers/supabase/user.ts';
import { JsonView } from '/~/shared/ui/json-view.tsx';
import { usePageFrameLayoutComponent } from '/~/shared/providers/layout/page-frame/index.tsx';
import { Spinner } from '/~/shared/ui/spinner.tsx';
import { useUrlParamName } from '/~/shared/lib/react/routing/url-params.ts';
import { SupabaseAutogeneratedDataGrid } from '/~/widgets/supabase/autogenerated-data-grid/index.tsx';
import useCurrentPath from '/~/shared/lib/react/routing/useCurrentPath.ts';
import toUrlWithRetPath from '/~/shared/lib/react/routing/toUrlWithRetpath.ts';
import { publicSchema } from '/~/shared/api/supabase/schemas.ts';
import { useQueryKeyUniqueSuffix } from '/~/shared/lib/react/query/key.ts';
import { useRenderOnlyInBrowser } from '/~/shared/lib/react/useRenderOnlyInBrowser.ts';

import { PageTitle } from '/~/shared/ui/page-title.tsx';

import {
  COLUMNS_SHOW_FIRST,
  COLUMNS_SHOW_LAST,
} from '/~/shared/api/supabase/const.ts';

//@deno-types="@types/lodash"
import { startCase } from 'lodash';

import { useQueryParamName } from '/~/shared/lib/react/routing/query-params.ts';

const TablePage = () => {
  const isBrowser = useRenderOnlyInBrowser();

  const supabaseUser = useSupabaseUser();
  const currentPath = useCurrentPath();

  const [
    qkey,
    // qkeyRegen
  ] = useQueryKeyUniqueSuffix();

  const PageFrameComponent = usePageFrameLayoutComponent();
  // const [loading, setLoading] = useState(false);

  const nameParam = useUrlParamName() || useQueryParamName();

  if (!nameParam) {
    return <>Error: can't parse url param "name"</>;
  }

  const name = `${nameParam}`;

  const tableSchema = publicSchema[name];
  // console.debug('__TEST__: TablePage: table schema:', tableSchema);

  const pageTitle = `${startCase(name)} table`;

  const loginUrl = toUrlWithRetPath('/login', currentPath);

  if (!tableSchema) {
    return <>Error: no schema with dis table</>;
  }

  return (
    <PageFrameComponent>
      <PageTitle>{pageTitle}</PageTitle>

      {isBrowser
        ? (
          <Suspense fallback={<Spinner />}>
            <SupabaseAutogeneratedDataGrid
              allowEdit={!!supabaseUser}
              allowInsert={!!supabaseUser}
              columnsNamesFirst={COLUMNS_SHOW_FIRST}
              columnsNamesLast={COLUMNS_SHOW_LAST}
              // onReloadRequired={qkeyRegen}
              queryKeyUniqueSuffix={qkey}
              renderAfterTable={({ debugData }) => (
                <>
                  {!supabaseUser && (
                    <div>
                      <Link to={loginUrl}>Login</Link> to edit
                    </div>
                  )}
                  <JsonView
                    data={debugData}
                  />
                </>
              )}
              tableName={name}
              tableSchema={tableSchema}
            />
          </Suspense>
        )
        : <Spinner />}
    </PageFrameComponent>
  );
};

export default TablePage;
