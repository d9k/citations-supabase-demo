import { usePageFrameLayoutComponent } from '/~/shared/providers/layout/page-frame.tsx';
import { useSupabaseUser } from '/~/shared/providers/supabase/user.ts';
import { useSupabase } from '/~/shared/providers/supabase/client.ts';
import { Spinner } from '/~/shared/ui/spinner.tsx';
import { useNavigate } from 'react-router-dom';
import { json } from '/~/shared/lib/json.ts';
import useUrlParamName from '/~/shared/lib/react/routing/useUrlParamName.ts';
import { useQuery } from '@tanstack/react-query';
import { SupabaseAutogeneratedDataGrid } from '../../widgets/supabase/autogenerated-data-grid.tsx';
import { generateQueryKeyUniqueSuffix } from '/~/shared/lib/react/query/key.ts';
import { Suspense } from 'react';

import { publicSchema } from '/~/shared/api/supabase/schemas.ts';
import { useQueryKeyUniqueSuffix } from '/~/shared/lib/react/query/key.ts';

const TablePage = () => {
  const [qkey, qkeyRegen] = useQueryKeyUniqueSuffix();
  const PageFrameComponent = usePageFrameLayoutComponent();
  // const [loading, setLoading] = useState(false);
  // const user = useSupabase();
  const name = useUrlParamName();

  if (!name) {
    return <>Error: can't parse url param "name"</>;
  }

  const tableSchema = publicSchema[name];
  console.debug('__TEST__: TablePage: table schema:', tableSchema);

  if (!tableSchema) {
    return <>Error: no schema with dis table</>;
  }

  return (
    <PageFrameComponent>
      <h3>Table {name}</h3>

      <Suspense fallback={<Spinner />}>
        <SupabaseAutogeneratedDataGrid
          tableName={name}
          tableSchema={tableSchema}
          queryKeyUniqueSuffix={qkey}
          firstColumnsNames={['id', 'name']}
        />
      </Suspense>
    </PageFrameComponent>
  );
};

export default TablePage;
