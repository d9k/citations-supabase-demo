
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";

CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";

CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";

CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";

CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

SET default_tablespace = '';

SET default_table_access_method = "heap";

CREATE TABLE IF NOT EXISTS "public"."authors" (
    "id" bigint NOT NULL,
    "lastname_name_patronymic" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "birth_year" bigint,
    "death_year" bigint,
    "approximate_years" boolean DEFAULT false NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "birth_town" bigint
);

ALTER TABLE "public"."authors" OWNER TO "postgres";

ALTER TABLE "public"."authors" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."author_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."citations" (
    "id" bigint NOT NULL,
    "english_text" "text",
    "author_id" bigint NOT NULL,
    "year" bigint,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp without time zone DEFAULT "now"() NOT NULL,
    "original_language_text" "text",
    "place_id" bigint,
    "event_id" bigint
);

ALTER TABLE "public"."citations" OWNER TO "postgres";

ALTER TABLE "public"."citations" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."citations_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."country" (
    "id" bigint NOT NULL,
    "name" "text",
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"(),
    "found_year" bigint,
    "next_rename_year" bigint
);

ALTER TABLE "public"."country" OWNER TO "postgres";

ALTER TABLE "public"."country" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."country_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."event" (
    "id" bigint NOT NULL,
    "name" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "start_year" bigint NOT NULL,
    "start_month" smallint NOT NULL,
    "end_year" bigint,
    "end_month" smallint,
    "place_id" bigint
);

ALTER TABLE "public"."event" OWNER TO "postgres";

ALTER TABLE "public"."event" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."event_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."place" (
    "id" bigint NOT NULL,
    "name" "text" DEFAULT 'in'::"text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "town_id" bigint NOT NULL
);

ALTER TABLE "public"."place" OWNER TO "postgres";

ALTER TABLE "public"."place" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."place_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

CREATE TABLE IF NOT EXISTS "public"."town" (
    "id" bigint NOT NULL,
    "name" "text" NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "country_id" bigint NOT NULL
);

ALTER TABLE "public"."town" OWNER TO "postgres";

ALTER TABLE "public"."town" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."town_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

ALTER TABLE ONLY "public"."authors"
    ADD CONSTRAINT "author_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."citations"
    ADD CONSTRAINT "citations_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."country"
    ADD CONSTRAINT "country_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."event"
    ADD CONSTRAINT "event_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."place"
    ADD CONSTRAINT "place_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."town"
    ADD CONSTRAINT "town_pkey" PRIMARY KEY ("id");

ALTER TABLE ONLY "public"."authors"
    ADD CONSTRAINT "authors_birth_town_fkey" FOREIGN KEY ("birth_town") REFERENCES "public"."town"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."citations"
    ADD CONSTRAINT "citations_author_id_fkey" FOREIGN KEY ("author_id") REFERENCES "public"."authors"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."citations"
    ADD CONSTRAINT "citations_event_id_fkey" FOREIGN KEY ("event_id") REFERENCES "public"."event"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."citations"
    ADD CONSTRAINT "citations_place_id_fkey" FOREIGN KEY ("place_id") REFERENCES "public"."place"("id");

ALTER TABLE ONLY "public"."event"
    ADD CONSTRAINT "event_place_id_fkey" FOREIGN KEY ("place_id") REFERENCES "public"."place"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."place"
    ADD CONSTRAINT "place_town_id_fkey" FOREIGN KEY ("town_id") REFERENCES "public"."town"("id") ON UPDATE CASCADE;

ALTER TABLE ONLY "public"."town"
    ADD CONSTRAINT "town_country_id_fkey" FOREIGN KEY ("country_id") REFERENCES "public"."country"("id") ON UPDATE CASCADE;

REVOKE USAGE ON SCHEMA "public" FROM PUBLIC;
GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";

GRANT ALL ON TABLE "public"."authors" TO "anon";
GRANT ALL ON TABLE "public"."authors" TO "authenticated";
GRANT ALL ON TABLE "public"."authors" TO "service_role";

GRANT ALL ON SEQUENCE "public"."author_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."author_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."author_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."citations" TO "anon";
GRANT ALL ON TABLE "public"."citations" TO "authenticated";
GRANT ALL ON TABLE "public"."citations" TO "service_role";

GRANT ALL ON SEQUENCE "public"."citations_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."citations_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."citations_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."country" TO "anon";
GRANT ALL ON TABLE "public"."country" TO "authenticated";
GRANT ALL ON TABLE "public"."country" TO "service_role";

GRANT ALL ON SEQUENCE "public"."country_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."country_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."country_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."event" TO "anon";
GRANT ALL ON TABLE "public"."event" TO "authenticated";
GRANT ALL ON TABLE "public"."event" TO "service_role";

GRANT ALL ON SEQUENCE "public"."event_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."event_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."event_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."place" TO "anon";
GRANT ALL ON TABLE "public"."place" TO "authenticated";
GRANT ALL ON TABLE "public"."place" TO "service_role";

GRANT ALL ON SEQUENCE "public"."place_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."place_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."place_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."town" TO "anon";
GRANT ALL ON TABLE "public"."town" TO "authenticated";
GRANT ALL ON TABLE "public"."town" TO "service_role";

GRANT ALL ON SEQUENCE "public"."town_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."town_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."town_id_seq" TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON SEQUENCES  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON FUNCTIONS  TO "service_role";

ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "postgres";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "anon";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "authenticated";
ALTER DEFAULT PRIVILEGES FOR ROLE "postgres" IN SCHEMA "public" GRANT ALL ON TABLES  TO "service_role";

RESET ALL;
